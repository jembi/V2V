package backingform.validator;

import java.util.Arrays;

import model.collectionbatch.CollectionBatch;

import org.apache.commons.lang3.StringUtils;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import viewmodel.CollectionBatchViewModel;
import backingform.CollectionBatchBackingForm;
import controller.UtilController;

public class CollectionBatchBackingFormValidator implements Validator {

  private Validator validator;

  private UtilController utilController;

  public CollectionBatchBackingFormValidator(Validator validator, UtilController utilController) {
    super();
    this.validator = validator;
    this.utilController = utilController;
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean supports(Class<?> clazz) {
    return Arrays.asList(CollectionBatchBackingForm.class,
                         CollectionBatch.class,
                         CollectionBatchViewModel.class).contains(clazz);
  }

  @Override
  public void validate(Object obj, Errors errors) {
    if (obj == null || validator == null)
      return;
    ValidationUtils.invokeValidator(validator, obj, errors);
    CollectionBatchBackingForm form = (CollectionBatchBackingForm) obj;
    updateAutoGeneratedFields(form);
    if (utilController.isDuplicateCollectionBatchNumber(form.getCollectionBatch()))
      errors.rejectValue("collectionBatch.batchNumber", "batchNumber.nonunique",
          "There exists a collection batch with the same batch number.");

    utilController.commonFieldChecks(form, "collectionBatch", errors);
  }

  private void updateAutoGeneratedFields(CollectionBatchBackingForm form) {
    if (StringUtils.isBlank(form.getBatchNumber()) &&
        utilController.isFieldAutoGenerated("collectionBatch", "batchNumber")) {
      form.setBatchNumber(utilController.getNextBatchNumber());
    }
  }

}
